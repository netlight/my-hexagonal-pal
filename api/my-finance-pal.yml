openapi: 3.0.1
info:
  version: 1.0.0
  title: My Finance Pal
  description: API of the personal finance budgeting app My Finance Pal
tags:
  - name: expenses
    description: Expenses of budgets
  - name: budgets
    description: Managing budgets
  - name: incomes
    description: Earn money
paths:
  /budgets:
    post:
      tags:
        - budgets
      description: Create a new budget
      operationId: createBudget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewBudget"
      responses:
        201:
          description: Budget created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Budget"
        400:
          description: Invalid budget
    get:
      tags:
        - budgets
      description: Get all budgets
      operationId: getBudgets
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Budget"
  /budgets/{budgetId}/expenses:
    post:
      tags:
        - expenses
      description: Register a new expense for a budget
      operationId: trackExpense
      parameters:
        - in: path
          name: budgetId
          required: true
          schema:
            $ref: "#/components/parameters/BudgetIdParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewExpense"
      responses:
        201:
          description: Expense created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Expense"
        404:
          description: Budget not found
  /incomes:
    post:
      tags:
        - incomes
      description: Add a new aggregation of income sources
      operationId: createIncome
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewIncome"
      responses:
        201:
          description: Income created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Income"
    get:
      tags:
        - incomes
      description: Get all stored incomes
      operationId: getAllIncomes
      responses:
        200:
          description: OK
          content:
            applicatioin/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Income"
  /incomes/{incomeId}/sources:
    post:
      tags:
        - incomes
      description: Add a new source for a single income
      operationId: addIncomeSource
      parameters:
        - in: path
          name: incomeId
          required: true
          schema:
            $ref: "#/components/schemas/IncomeId"
      requestBody:
        required: true
        content:
          applicaton/json:
            schema:
              $ref: "#/components/schemas/NewIncomeSource"
      responses:
        201:
          description: Income source created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeSource"
        404:
          description: Income not found

components:
  parameters:
    BudgetIdParam:
      in: path
      name: budgetId
      required: true
      schema:
        $ref: "#/components/schemas/BudgetId"
    ExpenseIdParam:
      in: path
      name: expenseId
      required: true
      schema:
        $ref: "#/components/schemas/ExpenseId"
  schemas:
    IncomeSourceId:
      type: string
      description: Unique identifier of an income source
      example: c0f45af3-3fd1-4053-8e4b-d907e002313b
    NewIncomeSource:
      type: object
      description: New source of incoming money
      required:
        - name
        - amount
      properties:
        name:
          type: string
          description: Name of the income source
          example: Salary
        amount:
          type: number
          description: Net amount of incoming money
          example: 213000
    IncomeSource:
      allOf:
        - type: object
          description: Source of incoming money
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/IncomeSourceId"
        - $ref: "#/components/schemas/NewIncomeSource"
    IncomeId:
      type: string
      description: Unique identifier of an income
      example: 1ff8884f-4a02-4f59-b757-188f33833abd
    NewIncome:
      type: object
      description: New aggregation of all income source under one summed up income
      required:
        - name
      properties:
        name:
          type: string
          description: Name of an income
          example: Household Income
    Income:
      allOf:
        - type: object
          description: Aggregate of all income source under one summed up income
          required:
            - id
            - sources
          properties:
            id:
              $ref: "#/components/schemas/IncomeId"
            sources:
              type: array
              items:
                $ref: "#/components/schemas/IncomeSource"
        - $ref: "#/components/schemas/NewIncome"
    BudgetId:
      type: string
      description: Unique identifier of one budget
      example: 850963b9-a04d-4698-b767-c0a0096b37c5
    NewBudget:
      type: object
      description: Budget to be created
      required:
        - incomeId
        - name
        - limit
      properties:
        incomeId:
          $ref: "#/components/schemas/IncomeId"
        name:
          type: string
          description: The name of the budget
          example: Takeout
        limit:
          type: number
          minimum: 0
          description: The total amount available for the budget
          example: 250
        startDate:
          type: string
          format: date
          description: Date marking the start of the budget period
          example: 2023-04-01
        endDate:
          type: string
          format: date
          description: Date marking the end of the budget period
          example: 2023-04-30
    Budget:
      allOf:
        - type: object
          description: Planned money to be available for tracking expenses related to a certain purpose over a period of time
          required:
            - id
            - expenses
          properties:
            id:
              $ref: "#/components/schemas/BudgetId"
            expenses:
              type: array
              items:
                $ref: "#/components/schemas/Expense"
        - $ref: "#/components/schemas/NewBudget"
    ExpenseId:
      type: string
      description: Unique identifier of a expense
      example: cfd3b0b7-bf5e-43d4-8341-940d5e07487d
    NewExpense:
      type: object
      description: A new expense to be created
      required:
        - description
        - amount
        - date
      properties:
        description:
          type: string
          description: Description of the expense
          example: Healthy breakfast at Five Guys
        amount:
          type: number
          description: Amount of money contained in the expense
          minimum: 0
          example: 23.94
        date:
          type: string
          format: date-time
    Expense:
      allOf:
        - $ref: "#/components/schemas/NewExpense"
        - type: object
          description: An expense related to a single budget
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/ExpenseId"
