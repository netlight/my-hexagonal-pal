openapi: 3.0.1
info:
  version: 1.0.0
  title: My Finance Pal
  description: API of the personal finance budgeting app My Finance Pal
tags:
  - name: expenses
    description: Spend money
  - name: budgets
    description: Managing budgets
  - name: income
    description: Earn money
servers:
  - url: http://localhost:3000
    description: Local Development
paths:
  /budgets:
    post:
      tags:
        - budgets
      description: Create a new budget
      operationId: createBudget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewBudget"
      responses:
        201:
          description: Budget created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Budget"
        400:
          description: Invalid budget
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Income for new budget not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        409:
          description: Sum of spendings of new budget and existing budgets is bigger than total income
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - budgets
      description: Get all budgets
      operationId: getBudgets
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Budget"
  /budgets/{budgetId}:
    get:
      tags:
        - budgets
      description: Find a budget by its ID
      operationId: findBudgetById
      parameters:
        - $ref: "#/components/parameters/BudgetIdParam"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Budget"
        404:
          description: Budget not found
  /budgets/{budgetId}/expenses:
    post:
      tags:
        - expenses
      description: Register a new expense for a budget
      operationId: trackExpense
      parameters:
        - $ref: "#/components/parameters/BudgetIdParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewExpense"
      responses:
        201:
          description: Expense created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Expense"
        404:
          description: Budget not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        409:
          description: Expense date out of budget bounds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /income-streams:
    post:
      tags:
        - income
      description: Add a new aggregation of a type of income
      operationId: createIncomeStream
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewIncomeStream"
      responses:
        201:
          description: Income stream created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeStream"
    get:
      tags:
        - income
      description: Get all stored income streams
      operationId: getAllIncomeStreams
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IncomeStream"
  /income-streams/{incomeStreamId}/earnings:
    post:
      tags:
        - income
      description: Register an earning under an income stream
      operationId: registerEarning
      parameters:
        - $ref: "#/components/parameters/IncomeStreamIdParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewEarning"
      responses:
        201:
          description: Earning registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Earning"
        400:
          description: Invalid income payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Income not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  parameters:
    BudgetIdParam:
      in: path
      name: budgetId
      required: true
      schema:
        $ref: "#/components/schemas/BudgetId"
    IncomeStreamIdParam:
      in: path
      name: incomeStreamId
      required: true
      schema:
        $ref: "#/components/schemas/IncomeStreamId"
  schemas:
    EarningId:
      type: string
      description: Unique identifier of an earning
      example: c0f45af3-3fd1-4053-8e4b-d907e002313b
    NewEarning:
      type: object
      description: New source of incoming money
      required:
        - name
        - amount
      properties:
        name:
          type: string
          description: Name of the earning event
          example: Salary
        amount:
          type: number
          description: Net amount of incoming money
          example: 213000
    Earning:
      allOf:
        - type: object
          description: Event of incoming money
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/EarningId"
        - $ref: "#/components/schemas/NewEarning"
    IncomeStreamId:
      type: string
      description: Unique identifier of an income stream
      example: 1ff8884f-4a02-4f59-b757-188f33833abd
    NewIncomeStream:
      type: object
      description: New aggregation of earnings under one summed up income stream
      required:
        - name
      properties:
        name:
          type: string
          description: Name of an income stream
          example: Full-time position at Cinema Munich
    IncomeStream:
      allOf:
        - type: object
          description: Aggregate of earnings under one summed up income stream
          required:
            - id
            - earnings
          properties:
            id:
              $ref: "#/components/schemas/IncomeStreamId"
            earnings:
              type: array
              items:
                $ref: "#/components/schemas/Earning"
        - $ref: "#/components/schemas/NewIncomeStream"
    BudgetId:
      type: string
      description: Unique identifier of one budget
      example: 850963b9-a04d-4698-b767-c0a0096b37c5
    NewBudget:
      type: object
      description: Budget to be created
      required:
        - name
        - limit
      properties:
        name:
          type: string
          description: The name of the budget
          example: Takeout
        limit:
          type: number
          minimum: 0
          description: The total amount available for the budget
          example: 250
        startDate:
          type: string
          format: date
          description: Date marking the start of the budget period
          example: 2023-04-01
        endDate:
          type: string
          format: date
          description: Date marking the end of the budget period
          example: 2023-04-30
    Budget:
      allOf:
        - type: object
          description: Planned money to be available for tracking expenses related to a certain purpose over a period of time
          required:
            - id
            - expenses
          properties:
            id:
              $ref: "#/components/schemas/BudgetId"
            expenses:
              type: array
              items:
                $ref: "#/components/schemas/Expense"
        - $ref: "#/components/schemas/NewBudget"
    ExpenseId:
      type: string
      description: Unique identifier of a expense
      example: cfd3b0b7-bf5e-43d4-8341-940d5e07487d
    NewExpense:
      type: object
      description: A new expense to be created
      required:
        - description
        - amount
        - date
      properties:
        description:
          type: string
          description: Description of the expense
          example: Healthy breakfast at Five Guys
        amount:
          type: number
          description: Amount of money contained in the expense
          minimum: 0
          example: 23.94
        date:
          type: string
          format: date-time
    Expense:
      allOf:
        - $ref: "#/components/schemas/NewExpense"
        - type: object
          description: An expense related to a single budget
          required:
            - id
          properties:
            id:
              $ref: "#/components/schemas/ExpenseId"
    Error:
      type: object
      description: Error response
      required:
        - message
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties: true
